<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.acme.greeting.api.restful.k8s</groupId>
	<artifactId>acme-greeting-api-restful-k8s</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>acme-greeting-api-restful-k8s</name>
	<description></description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.0.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<!-- Spring Boot Properties -->
		<start-class>com.acme.greeting.api.restful.k8s.Application</start-class>

		<!-- Compiler & Resources -->
		<java.version>1.8</java.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- API -->
		<swagger.version>2.9.2</swagger.version>

		<!-- Verifier -->
		<verifier.verification.file>src/test/verifier/verifications-test.xml</verifier.verification.file>

		<!-- Testing -->
		<skip.unit.tests>false</skip.unit.tests>
		<skip.integration.tests>false</skip.integration.tests>
	</properties>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<spring.profiles.active>dev</spring.profiles.active>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>uat</id>
			<properties>
				<spring.profiles.active>uat</spring.profiles.active>
				<skip.unit.tests>false</skip.unit.tests>
				<skip.integration.tests>true</skip.integration.tests>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<spring.profiles.active>prod</spring.profiles.active>
				<skip.unit.tests>true</skip.unit.tests>
				<skip.integration.tests>true</skip.integration.tests>
			</properties>
		</profile>
	</profiles>

	<dependencies>

		<!-- *** Architecture Libraries *** -->

		<!-- Modules -->


		<!-- *** Third Party Libraries *** -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- To reload the code when changes made -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>

	</dependencies>

	<build>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>

			<!-- spring-boot-maven-plugin : Plugin used to work with Spring Boot application -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- maven-resources-plugin : Plugin used to handle the project resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- maven-compiler-plugin : Plugin used to compile the project source -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- maven-verifier-plugin : Plugin used to verify the existence of files and directories -->
			<plugin>
				<artifactId>maven-verifier-plugin</artifactId>
				<version>1.1</version>
				<configuration>
					<verificationFile>${verifier.verification.file}</verificationFile>
					<failOnError>true</failOnError>
				</configuration>
				<executions>
					<execution>
						<id>main</id>
						<phase>verify</phase>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-surefire-plugin : Plugin used to run unit tests - Generate reports in the directory target/surefire-reports -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>${skip.unit.tests}</skipTests>
				</configuration>
				<executions>
					<execution>
						<id>unit-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skipTests>${skip.unit.tests}</skipTests>
							<includes>
								<include>**/*Test.java</include>
							</includes>
						</configuration>
					</execution>
					<execution>
						<id>integration-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skipTests>${skip.integration.tests}</skipTests>
							<includes>
								<include>**/*TestIT.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- jacoco-maven-plugin : Plugin used to generate code coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.5</version>
				<executions>
					<execution>
						<id>coverage-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>coverage-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<outputDirectory>target/jacoco-report</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- docker-maven-plugin : Plugin for running and creating Docker images -->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.33.0</version>
				<configuration>
					<registry>http://localhost:8083/repository/docker-registry/</registry>
					<authConfig>
						<username>admin</username>
						<password>admin123</password>
					</authConfig>
					<images>
						<image>
							<name>localhost:8083/acme/${project.name}-nexushub:${project.version}</name>
							<alias>${project.name}-nexushub</alias>
							<build>
								<dockerFileDir>${project.basedir}</dockerFileDir>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>

			<!-- jib-maven-plugin -->
			<!-- 
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>0.9.9</version>
				<configuration>
					<from>
						<image>openjdk:8u171-alpine</image>
						<auth>
							<username>docker-hub-username</username>
							<password>docker-hub-password</password>
						</auth>
					</from>
					<to>
						<image>docker-hud-userid/${project.artifactId}:${project.version}</image>
						<auth>
							<username>docker-hub-username</username>
							<password>>docker-hub-password</password>
						</auth>
					</to>
					<container>
						<jvmFlags>
							<jvmFlag>-Xms512m</jvmFlag>
							<jvmFlag>-Xmx512m</jvmFlag>
						</jvmFlags>
					</container>
				</configuration>
			</plugin>-->

		</plugins>
	</build>

	<!-- Download dependencies from Nexus -->
	<repositories>
		<repository>
			<id>maven-group</id>
			<url>http://localhost:8081/repository/maven-public/</url>
		</repository>
	</repositories>

	<!-- Publish the project in Nexus 
	<distributionManagement>
		<snapshotRepository>
			<id>nexus-snapshots</id>
			<url>http://localhost:8081/repository/maven-snapshots/</url>
		</snapshotRepository>
		<repository>
			<id>nexus-releases</id>
			<url>http://localhost:8081/repository/maven-releases/</url>
		</repository>
	</distributionManagement>
	-->

</project>
